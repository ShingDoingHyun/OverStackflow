<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.bit.op.osf.tagBoard.mapper.QuestionBoardMapper">

	<insert id="insertQuestion" parameterType="com.bit.op.osf.tagBoard.model.QuestionBoard"> 
        insert into questionboard(memId, content, title) value (#{memId}, #{content}, #{title});
        <selectKey keyProperty="questionNo" resultType="int" order="AFTER">
        	 SELECT LAST_INSERT_ID();
    	</selectKey>
    </insert>
    
    <select id="selectQuestionNo" resultType="com.bit.op.osf.tagBoard.model.QuestionBoard" parameterType="int">
    	select questionboard.questionNo, memId, title, content, regDate, view, tags, tagNos, vote
			from questionboard
			left join (select questionNo, group_concat(tagName separator ' ') as tags , group_concat(questiontag.tagNo separator ' ') as tagNos
				from questiontag
				left join tag  
					on questiontag.tagNo = tag.tagNo
			   	group by questionNo) as b
			on questionboard.questionNo = b.questionNo
		where questionboard.questionNo = #{param};
    </select>
    
    <select id="selectPopQuestion" resultType="com.bit.op.osf.tagBoard.model.QuestionBoard">
	    select questionboard.questionNo, memId, title, regDate, view, tags, tagNos, vote
			from questionboard
			left join (select questionNo, group_concat(tagName separator ' ') as tags , group_concat(questiontag.tagNo separator ' ') as tagNos
				from questiontag
				left join tag  
					on questiontag.tagNo = tag.tagNo
			   	group by questionNo) as b
			on questionboard.questionNo = b.questionNo
		order by view desc limit 0,99;
    </select>
   
    <select id="selectQuestion" resultType="com.bit.op.osf.tagBoard.model.QuestionBoard" parameterType="com.bit.op.osf.tagBoard.model.Search">
	    select questionboard.questionNo, memId, title, regDate, view, tags, tagNos, vote
			from questionboard
			left join (select questionNo, group_concat(tagName separator ' ') as tags , group_concat(questiontag.tagNo separator ' ') as tagNos
				from questiontag
				left join tag  
					on questiontag.tagNo = tag.tagNo
			   	group by questionNo) as b
			on questionboard.questionNo = b.questionNo
				<if test="tagNo != null and tagNo != ''">
				join (select questionNo, tagNo from questiontag where tagNo=#{tagNo}) as c
				on questionboard.questionNo = c.questionNo
				</if>
			<where>
				<if test="keyword != null">
					title like CONCAT('%',#{keyword},'%')
				</if>
			</where>
		<if test="order != null and order != '' ">order by ${order} desc</if>
		limit #{firstRow}, #{endRow};
    </select>
    
    <update id="updateQuestionView"  parameterType="int">
    	update questionboard set view= view+1 where questionno = #{param};
    </update>
    
    <update id="updateQuestion"  parameterType="com.bit.op.osf.tagBoard.model.QuestionBoard">  	
    	update questionboard set content=#{content}, title=#{title} where questionno = #{questionNo};
    </update>
    
    <update id="deleteQuestion" parameterType="int">
    	update questionboard set content='삭제된 질문입니다.', title='삭제된 질문입니다.', memId='알 수 없는 사용자' where questionno = #{param};
    </update>
    
    <select id="selectCount" resultType="int" parameterType="com.bit.op.osf.tagBoard.model.Search">
	    select count(*) from questionboard
	    <if test="tagNo != null and tagNo != ''">
			join (select questionNo, tagNo from questiontag where tagNo=#{tagNo}) as c
			on questionboard.questionNo = c.questionNo
		</if>
	   <where>
		   <if test="keyword != null">
				title like CONCAT('%',#{keyword},'%')
			</if>
		</where>; 
    </select>
    
    <select id="selectVisitQuestion" resultType="String" parameterType="com.bit.op.osf.tagBoard.model.QuestionBoard">
	    select title from questionboard where questionNo = #{questionNo}
    </select>
        
        
    <delete id="deleteFavQuestion"  parameterType="com.bit.op.osf.tagBoard.model.QuestionBoard">  	
    	delete from favquestion where questionno = #{questionNo} and memId = #{memId};
    </delete>
    
    <insert id="insertFavQuestion"  parameterType="com.bit.op.osf.tagBoard.model.QuestionBoard">  	
    	insert into favquestion(questionNo, memId) value (#{questionNo}, #{memId});
    </insert>
    
    
    <select id="selectFavQuestion" resultType="int" parameterType="java.util.HashMap">
    	select questionNo from favquestion where questionNo=#{questionNo} and memId=#{memberId};
    </select>
    
    
     <select id="selectFavQuestionList" resultType="com.bit.op.osf.tagBoard.model.QuestionBoard" parameterType="com.bit.op.osf.member.model.MemRegInfo">
	     select questionboard.questionNo, title from questionboard 
	     	join favquestion on questionboard.questionNo = favquestion.questionNo 
	     		where favquestion.memId=#{memberId}  
	     	order by favDate desc
	     limit 0,5;
    </select>
    
    <insert id="voteUpDown" parameterType="com.bit.op.osf.tagBoard.model.QuestionBoard"> 
        INSERT INTO memquestionvote 
        (questionNo, memberId, voteDate, voteUpDown) 
        <if test="vote gt 0">
	        VALUE (#{questionNo}, #{memId}, now(), 'up') 
	        on DUPLICATE KEY 
	        UPDATE voteDate = now(), voteUpDown='up'
        </if>
        <if test="vote lt 0">
	        VALUE (#{questionNo}, #{memId}, now(), 'down') 
	        on DUPLICATE KEY 
	        UPDATE voteDate = now(), voteUpDown='down'
        </if>;
    </insert>
    
    <delete id="deleteVoteUpDown" parameterType="com.bit.op.osf.tagBoard.model.QuestionBoard">
     	delete from memquestionvote where questionNo = #{questionNo} and memberId = #{memId};
    </delete>
    
    <select id="questionVoteCheck" resultType="int" parameterType="com.bit.op.osf.tagBoard.model.QuestionBoard">
		select count(*) from memquestionvote where questionNo=#{questionNo};
    </select>
     

     
    <update id="questionVoteUpdate"  parameterType="com.bit.op.osf.tagBoard.model.QuestionBoard">
    	update questionboard set vote= #{vote} where questionNo = #{questionNo};
    </update>
</mapper>