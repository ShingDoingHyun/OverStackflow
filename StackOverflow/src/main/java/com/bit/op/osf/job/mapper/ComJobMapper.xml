<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bit.op.osf.job.mapper.ComJobMapper">

<select id="selectComMember" resultType="com.bit.op.osf.job.model.ComMember" parameterType="String">
	select comName, comAddress, comZipcode, comCall, comHomePageUrl, comChargerName, comChargerEmail, comIntroduction, comBenefits from com where comId = #{comId}
</select>

<insert id="insertJobInfo" parameterType="com.bit.op.osf.job.model.JobInfo" > 
	insert into jobinfo (jobTitle, jobField, jobRequiredTask, jobQualification, 
	jobLocation, jobZipcode, jobWorkTime, jobPayType, jobPayAmount, jobBenefits, jobContent, comIntroduction, jobDueDate, jobApplyType, jobHomePageUrl, jobChargerSendEmail ,jobChargerName, jobChargerEmail, jobEtc, comId) 
	values
	(#{jobTitle}, #{jobField}, #{jobRequiredTask}, #{jobQualification}, #{jobLocation}, #{jobZipcode}, #{jobWorkTime}, #{jobPayType}, #{jobPayAmount}, 
	#{jobBenefits}, #{jobContent}, #{comIntroduction}, #{jobDueDate}, #{jobApplyType}, #{jobHomePageUrl}, #{jobChargerSendEmail}, #{jobChargerName}, #{jobChargerEmail}, #{jobEtc}, #{comId}) 
</insert>

<insert id="insertJobType" parameterType="java.util.HashMap">
	<if test="jobNo == 0">
	insert into jobtype (jobType, jobNo) values ( #{jobType}, (select max(jobNo) from jobinfo))
	</if>
	<if test="jobNo != 0">
	insert into jobtype (jobType, jobNo) values ( #{jobType}, #{jobNo})
	</if>
</insert>

<select id="selectJobno" resultType="Integer">
	 select max(jobNo) from jobinfo 
</select>
 
 <select id="countJobInfo" resultType="Integer" parameterType="String">
 	select count(*) from jobinfo
 	<if test="value!=null and value!=''">
 	where comId = #{value}
 	</if>
 </select>
 
 <select id="selectJobInfoList" resultType="com.bit.op.osf.job.model.JobInfo" parameterType="java.util.HashMap">
	 select jobNo, jobTitle, jobField, jobLocation, jobZipcode, jobWorkTime, jobPayType, jobPayAmount, 
	 DATE_FORMAT(jobDueDate ,'%Y-%m-%d') as jobDueDate, DATE_FORMAT(jobRegisterDate ,'%Y-%m-%d') as jobRegisterDate, endedJob
	 from jobinfo
	 <if test="comId!=null">
	 	where comId = #{comId}
	 </if>
	 order by jobRegisterDate desc
	 limit #{firstRow}, #{endRow}
 </select>
 
<select id="selectJobInfo" resultType="com.bit.op.osf.job.model.JobInfo" parameterType="Integer">
	select jobNo, jobTitle, jobField, jobRequiredTask, jobQualification, jobLocation, jobZipcode, 
	jobWorkTime, jobPayType, jobPayAmount, jobBenefits, jobContent, com.comCall as comCall, 
	jobInfo.comIntroduction as comIntroduction, DATE_FORMAT(jobDueDate ,'%Y-%m-%d') as jobDueDate, 
	jobApplyType, jobHomePageUrl, jobChargerSendEmail ,jobChargerName, jobChargerEmail, jobEtc, endedJob ,DATE_FORMAT(jobRegisterDate ,'%Y-%m-%d') as jobRegisterDate,
	comName, comAddress, comZipcode, comPhoto
	from jobinfo jobInfo, com 
	where jobInfo.comId = com.comId and jobNo = #{jobNo};
</select>

<select id="selectJobInfoCom" resultType="com.bit.op.osf.job.model.ComMember" parameterType="Integer">
	select comName, comAddress
	from jobinfo a, com b
    where a.comId = b.comId
    and jobNo = #{jobNo}
</select>

<select id="selectJobTypeList" resultType="String" parameterType="Integer">
	select jobType from jobtype where jobNo = #{jobNo}
</select> 

<update id="updateJobInfo" parameterType="com.bit.op.osf.job.model.JobInfo">
	update jobinfo 
	 set jobTitle=#{jobTitle}, jobField=#{jobField}, jobRequiredTask=#{jobRequiredTask}, jobQualification=#{jobQualification}, jobLocation=#{jobLocation},  jobZipcode=#{jobZipcode},
	 jobWorkTime=#{jobWorkTime}, jobPayType=#{jobPayType},  jobPayAmount=#{jobPayAmount}, jobBenefits=#{jobBenefits},  jobContent=#{jobContent},  comIntroduction=#{comIntroduction},
	 jobDueDate=#{jobDueDate}, jobApplyType=#{jobApplyType}, jobHomePageUrl=#{jobHomePageUrl}, jobChargerSendEmail=#{jobChargerSendEmail}, jobChargerName=#{jobChargerName}, jobChargerEmail=#{jobChargerEmail}, jobEtc=#{jobEtc}
	where jobNo=#{jobNo}
</update>

<delete id="deleteJobType" parameterType="Integer">
	delete from jobtype where jobNo = #{jobNo}
</delete>

<update id="updateJobInfoPeriod" parameterType="java.util.HashMap">
	update jobinfo
	set jobDueDate = #{now}
	where jobNo = #{jobNo}
</update>

<delete id="deleteJobInfo" parameterType="Integer">
	delete from jobinfo where jobNo=#{jobNo}
</delete>
 
<select id="countJobInfoBySearch" resultType="Integer" parameterType="java.util.HashMap">
	select count(distinct a.jobNo)
	from jobinfo a, jobtype b
	where a.jobNo = b.jobNo
		 and endedJob = 'N'
		<if test="search!=null and search.jobTitle!=null and search.jobTitle!=''">
 		 and (jobTitle like '%'||#{search.jobTitle}||'%' or jobRequiredTask like '%'||#{search.jobTitle}||'%')
 		</if>
 		<if test="search!=null and search.jobLocation!=null">
 		 and jobLocation like '%'||#{search.jobLocation}||'%'
 		</if>
 		<if test="search!=null and search.jobPayType!=null">
 		 and jobPayType like '%'||#{search.jobPayType}||'%'
 		</if>
 		<if test="search!=null and search.jobPayAmount!=null">
 		 and jobPayAmount > #{search.jobPayAmount}
 		</if>
 		<if test="search.jobTypeList!=null and search.jobTypeList!=''">
 		  <foreach collection="search.jobTypeList" item="jobType" >
 		  	and jobType like CONCAT('%',#{jobType},'%')
 		  </foreach>
 		</if>
 		<if test="comId!=null and comId!=''">
	 	 and comId = #{comId}
	 	</if>
</select>
 
 <select id="selectJobInfoListBySearch" resultType="com.bit.op.osf.job.model.JobInfo" parameterType="java.util.HashMap">
	 select distinct a.jobNo as jobNo, jobTitle, jobField, jobLocation, jobZipcode, jobWorkTime, jobPayType, jobPayAmount, DATE_FORMAT(jobDueDate ,'%Y-%m-%d') as jobDueDate, DATE_FORMAT(jobRegisterDate ,'%Y-%m-%d') as jobRegisterDate, endedJob
	 from jobinfo a, jobtype b
	 where a.jobNo = b.jobNo
		 <if test="search.jobTitle!=null and search.jobTitle!=''">
 		 and (jobTitle like CONCAT('%',#{search.jobTitle},'%') or jobRequiredTask like CONCAT('%',#{search.jobTitle},'%'))
 		</if>
 		<if test="search.jobLocation!=null and search.jobLocation!=''">
 		 and jobLocation like CONCAT('%',#{search.jobLocation},'%')
 		</if>
 		<if test="search.jobPayType!=null and search.jobPayType!=''">
 		 and jobPayType like CONCAT('%',#{search.jobPayType},'%')
 		</if>
 		<if test="search.jobPayAmount!=null and  search.jobPayAmount!=''">
 		 and jobPayAmount > #{search.jobPayAmount}
 		</if>
 		<if test="search.jobTypeList!=null and search.jobTypeList!=''">
 		  <foreach collection="search.jobTypeList" item="jobType" >
 		  	and jobType like CONCAT('%',#{jobType},'%')
 		  </foreach>
 		</if>
 		<if test="comId!=null and comId!=''">
	 	 and comId = #{comId}
	 	</if>
	 	<if test="search.order == 'jobRegisterDate'">
	 	 order by jobRegisterDate desc
	 	</if>
	 	<if test="search.order == 'jobTitle'">
	 	 order by jobTitle asc
	 	</if>
		 limit #{firstRow}, #{endRow}
 </select>
 
 <delete id="deleteFavJobInfo" parameterType="com.bit.op.osf.job.model.JobInfo">
 	delete from favjobinfo where jobNo=#{jobNo} and comId=#{comId}
 </delete>
 
 <insert id="insertFavJobInfo" parameterType="com.bit.op.osf.job.model.JobInfo">
 	insert into favjobinfo(jobNo, comId) values (#{jobNo}, #{comId})
 </insert>
 
 <select id="selectFavJobInfoList" resultType="com.bit.op.osf.job.model.JobInfo" parameterType="com.bit.op.osf.member.model.ComRegInfo">
 	select a.jobNo as jobNo, jobTitle
 	from jobinfo a, favjobinfo b
 	where a.jobNo = b.jobNo 
 	and b.comId = #{comId}
 	order by favDate desc
 </select>
 
 <!-- 채용공고 즐겨찾기 only JobNo -->
 <select id="selectFavJob" resultType="com.bit.op.osf.job.model.JobInfo" parameterType="java.util.HashMap">
 	select jobNo from favjobinfo where jobNo = #{jobNo} and comId=#{comId}
 </select>
 
 <!-- 쿠키 불러오기 only JobTitle-->
 <select id="selectVisitJobInfo" resultType="String" parameterType="Integer">
 	select jobTitle from jobinfo where jobNo = #{jobNo}
 </select>
 
 <!-- 마감 모드로 자동 변경 -->
 <update id="updateEndedDateForAuto">
 	update jobinfo set endedJob = 'Y' <![CDATA[where jobDueDate <= curdate()]]> 
 </update>
 
 <update id="updateEndedDateForY" parameterType="Integer">
 	update jobinfo set endedJob = 'Y' where jobNo = #{jobNo}
 </update>

 
 <!-- 마감 모드 취소 변경 -->
 <update id="updateEndedDateForN" parameterType="Integer">
 	update jobinfo set endedJob = 'N' where jobNo = #{jobNo}
 </update>

</mapper>